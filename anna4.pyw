# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'anna.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import os
import sys
import psycopg2
from PyQt5.QtCore import QTimer
from PyQt5.QtWidgets import QMessageBox, QTableWidgetItem, QSizePolicy
from PyQt5 import QtCore, QtGui, QtWidgets

ID = 0

class Ui_Dialog(object):


    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(311, 141)
        self.layoutWidget = QtWidgets.QWidget(Dialog)
        self.layoutWidget.setGeometry(QtCore.QRect(10, 20, 291, 31))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_3 = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_3.addWidget(self.label_3)
        self.login = QtWidgets.QTextEdit(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.login.setFont(font)
        self.login.setObjectName("login")
        self.horizontalLayout_3.addWidget(self.login)
        self.layoutWidget_2 = QtWidgets.QWidget(Dialog)
        self.layoutWidget_2.setGeometry(QtCore.QRect(10, 60, 291, 31))
        self.layoutWidget_2.setObjectName("layoutWidget_2")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.layoutWidget_2)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_4 = QtWidgets.QLabel(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_4.addWidget(self.label_4)
        self.password = QtWidgets.QTextEdit(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.password.setFont(font)
        self.password.setObjectName("password")
        self.horizontalLayout_4.addWidget(self.password)
        self.login_button = QtWidgets.QPushButton(Dialog)
        self.login_button.setGeometry(QtCore.QRect(110, 100, 91, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.login_button.setFont(font)
        self.login_button.setObjectName("login_button")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)
        ####################################################333

        self.login_button.clicked.connect(lambda: self.checkLP())

    def checkLP(self):
        global ID
        user_login = self.login.toPlainText()
        user_password = self.password.toPlainText()
        if user_password == "admin" and user_login == "admin":
            ID = 1
            Login.close()
        elif user_login == "user" and user_password == "user":
            ID = 2
            Login.close()
        else:
            msgBox = QMessageBox()
            msgBox.setWindowTitle("Ошибка")
            msgBox.setText("Пользователь не найден!")
            msgBox.setIcon(QMessageBox.Information)
            msgBox.setStandardButtons(QMessageBox.Ok)
            retval = msgBox.exec_()

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label_3.setText(_translate("Dialog", "Введите логин:"))
        self.label_4.setText(_translate("Dialog", "Введите пароль:"))
        self.login_button.setText(_translate("Dialog", "Войти"))


class Ui_MainWindow(object):
    timer = QTimer()
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(801, 612)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, -1, 916, 591))
        self.tabWidget.setObjectName("tabWidget")
        self.tab_1 = QtWidgets.QWidget()
        self.tab_1.setObjectName("tab_1")
        self.tableWidget_2 = QtWidgets.QTableWidget(self.tab_1)
        self.tableWidget_2.setEnabled(True)
        self.tableWidget_2.setGeometry(QtCore.QRect(10, 40, 771, 511))
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.tableWidget_2.setColumnCount(0)
        self.tableWidget_2.setRowCount(0)
        self.tableWidget_2.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.layoutWidget = QtWidgets.QWidget(self.tab_1)
        self.layoutWidget.setGeometry(QtCore.QRect(10, 0, 321, 31))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label1 = QtWidgets.QLabel(self.layoutWidget)
        self.label1.setEnabled(True)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label1.setFont(font)
        self.label1.setIndent(-1)
        self.label1.setObjectName("label1")
        self.horizontalLayout_2.addWidget(self.label1)
        self.selectChooseBox = QtWidgets.QComboBox(self.layoutWidget)
        self.selectChooseBox.setObjectName("selectChooseBox")
        self.horizontalLayout_2.addWidget(self.selectChooseBox)
        self.tabWidget.addTab(self.tab_1, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.tableWidget_3 = QtWidgets.QTableWidget(self.tab_2)
        self.tableWidget_3.setGeometry(QtCore.QRect(10, 40, 771, 511))
        self.tableWidget_3.setObjectName("tableWidget_3")
        self.tableWidget_3.setColumnCount(0)
        self.tableWidget_3.setRowCount(0)
        self.layoutWidget1 = QtWidgets.QWidget(self.tab_2)
        self.layoutWidget1.setGeometry(QtCore.QRect(11, 0, 481, 32))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.layoutWidget1)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label2 = QtWidgets.QLabel(self.layoutWidget1)
        self.label2.setEnabled(True)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label2.setFont(font)
        self.label2.setObjectName("label2")
        self.horizontalLayout_3.addWidget(self.label2)
        self.insertComboBox = QtWidgets.QComboBox(self.layoutWidget1)
        self.insertComboBox.setObjectName("insertComboBox")
        self.horizontalLayout_3.addWidget(self.insertComboBox)
        self.commitInsert = QtWidgets.QPushButton(self.layoutWidget1)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.commitInsert.setFont(font)
        self.commitInsert.setAutoExclusive(False)
        self.commitInsert.setObjectName("commitInsert")
        self.horizontalLayout_3.addWidget(self.commitInsert)
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_9 = QtWidgets.QWidget()
        self.tab_9.setObjectName("tab_9")
        self.tableWidget = QtWidgets.QTableWidget(self.tab_9)
        self.tableWidget.setGeometry(QtCore.QRect(10, 40, 771, 511))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.layoutWidget2 = QtWidgets.QWidget(self.tab_9)
        self.layoutWidget2.setGeometry(QtCore.QRect(8, 0, 788, 32))
        self.layoutWidget2.setObjectName("layoutWidget2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget2)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label3 = QtWidgets.QLabel(self.layoutWidget2)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label3.setFont(font)
        self.label3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label3.setObjectName("label3")
        self.horizontalLayout.addWidget(self.label3)
        self.alterComboBox = QtWidgets.QComboBox(self.layoutWidget2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.alterComboBox.sizePolicy().hasHeightForWidth())
        self.alterComboBox.setSizePolicy(sizePolicy)
        self.alterComboBox.setObjectName("alterComboBox")
        self.horizontalLayout.addWidget(self.alterComboBox)
        self.label4 = QtWidgets.QLabel(self.layoutWidget2)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label4.setFont(font)
        self.label4.setAlignment(QtCore.Qt.AlignCenter)
        self.label4.setObjectName("label4")
        self.horizontalLayout.addWidget(self.label4)
        self.lineEdit = QtWidgets.QLineEdit(self.layoutWidget2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit.sizePolicy().hasHeightForWidth())
        self.lineEdit.setSizePolicy(sizePolicy)
        self.lineEdit.setObjectName("lineEdit")
        self.horizontalLayout.addWidget(self.lineEdit)
        self.commitAlter_2 = QtWidgets.QPushButton(self.layoutWidget2)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.commitAlter_2.setFont(font)
        self.commitAlter_2.setAutoExclusive(False)
        self.commitAlter_2.setObjectName("commitAlter_2")
        self.horizontalLayout.addWidget(self.commitAlter_2)
        self.commitAlter = QtWidgets.QPushButton(self.layoutWidget2)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.commitAlter.setFont(font)
        self.commitAlter.setAutoExclusive(False)
        self.commitAlter.setObjectName("commitAlter")
        self.horizontalLayout.addWidget(self.commitAlter)
        self.tabWidget.addTab(self.tab_9, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.tabWidget_2 = QtWidgets.QTabWidget(self.tab_3)
        self.tabWidget_2.setGeometry(QtCore.QRect(0, 0, 791, 581))
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.tableWidget_4 = QtWidgets.QTableWidget(self.tab)
        self.tableWidget_4.setGeometry(QtCore.QRect(0, 40, 771, 491))
        self.tableWidget_4.setObjectName("tableWidget_4")
        self.tableWidget_4.setColumnCount(0)
        self.tableWidget_4.setRowCount(0)
        self.layoutWidget3 = QtWidgets.QWidget(self.tab)
        self.layoutWidget3.setGeometry(QtCore.QRect(0, 0, 771, 32))
        self.layoutWidget3.setObjectName("layoutWidget3")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.layoutWidget3)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_3 = QtWidgets.QLabel(self.layoutWidget3)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_4.addWidget(self.label_3)
        self.dateEdit = QtWidgets.QDateEdit(self.layoutWidget3)
        self.dateEdit.setObjectName("dateEdit")
        self.horizontalLayout_4.addWidget(self.dateEdit)
        self.label_7 = QtWidgets.QLabel(self.layoutWidget3)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_4.addWidget(self.label_7)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.layoutWidget3)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.horizontalLayout_4.addWidget(self.lineEdit_2)
        self.pushButton_5 = QtWidgets.QPushButton(self.layoutWidget3)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setObjectName("pushButton_5")
        self.horizontalLayout_4.addWidget(self.pushButton_5)
        self.tabWidget_2.addTab(self.tab, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.tableWidget_5 = QtWidgets.QTableWidget(self.tab_4)
        self.tableWidget_5.setGeometry(QtCore.QRect(0, 40, 771, 491))
        self.tableWidget_5.setObjectName("tableWidget_5")
        self.tableWidget_5.setColumnCount(0)
        self.tableWidget_5.setRowCount(0)
        self.layoutWidget4 = QtWidgets.QWidget(self.tab_4)
        self.layoutWidget4.setGeometry(QtCore.QRect(0, 0, 771, 32))
        self.layoutWidget4.setObjectName("layoutWidget4")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.layoutWidget4)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label_4 = QtWidgets.QLabel(self.layoutWidget4)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_5.addWidget(self.label_4)
        self.dateEdit_2 = QtWidgets.QDateEdit(self.layoutWidget4)
        self.dateEdit_2.setObjectName("dateEdit_2")
        self.horizontalLayout_5.addWidget(self.dateEdit_2)
        self.label_5 = QtWidgets.QLabel(self.layoutWidget4)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_5.addWidget(self.label_5)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.layoutWidget4)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.horizontalLayout_5.addWidget(self.lineEdit_3)
        self.pushButton_4 = QtWidgets.QPushButton(self.layoutWidget4)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setObjectName("pushButton_4")
        self.horizontalLayout_5.addWidget(self.pushButton_4)
        self.tabWidget_2.addTab(self.tab_4, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.tableWidget_6 = QtWidgets.QTableWidget(self.tab_5)
        self.tableWidget_6.setGeometry(QtCore.QRect(0, 40, 771, 491))
        self.tableWidget_6.setObjectName("tableWidget_6")
        self.tableWidget_6.setColumnCount(0)
        self.tableWidget_6.setRowCount(0)
        self.layoutWidget5 = QtWidgets.QWidget(self.tab_5)
        self.layoutWidget5.setGeometry(QtCore.QRect(0, 0, 771, 32))
        self.layoutWidget5.setObjectName("layoutWidget5")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.layoutWidget5)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_13 = QtWidgets.QLabel(self.layoutWidget5)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_13.setFont(font)
        self.label_13.setObjectName("label_13")
        self.horizontalLayout_6.addWidget(self.label_13)
        self.lineEdit_4 = QtWidgets.QLineEdit(self.layoutWidget5)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.horizontalLayout_6.addWidget(self.lineEdit_4)
        self.pushButton_8 = QtWidgets.QPushButton(self.layoutWidget5)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton_8.setFont(font)
        self.pushButton_8.setObjectName("pushButton_8")
        self.horizontalLayout_6.addWidget(self.pushButton_8)
        self.tabWidget_2.addTab(self.tab_5, "")
        self.tabWidget.addTab(self.tab_3, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(3)
        self.tabWidget_2.setCurrentIndex(2)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        ###############################
        self.connectToDatabase()
        self.fillBoxs()
        self.makeSelect()
        self.selectChooseBox.currentTextChanged.connect(lambda: self.makeSelect())
        self.commitInsert.clicked.connect(lambda: self.pr1())
        self.showAddTable()
        self.insertComboBox.currentTextChanged.connect(lambda: self.showAddTable())
        self.showChangeTable()
        self.alterComboBox.currentTextChanged.connect(lambda: self.showChangeTable())
        self.commitAlter_2.clicked.connect(lambda: self.showChangeTableByID())
        self.commitAlter.clicked.connect(lambda: self.saveChanges())
        self.pushButton_5.clicked.connect(lambda: self.reptOne())
        self.pushButton_4.clicked.connect(lambda: self.reptTwo())
        self.pushButton_8.clicked.connect(lambda: self.reptThree())
        self.timer.setInterval(500)
        self.timer.timeout.connect(lambda: self.makeSelect())
        self.timer.start()

    def insertErrorMessage(self):
        msgBox = QMessageBox()
        msgBox.setWindowTitle("Ошибка")
        msgBox.setText("Ошибка при добавлении!")
        msgBox.setIcon(QMessageBox.Information)
        msgBox.setStandardButtons(QMessageBox.Ok)
        retval = msgBox.exec_()
        print("Return value:", retval)
        self.conn.rollback()

    def IDErrorMessage(self):
        msgBox = QMessageBox()
        msgBox.setWindowTitle("Ошибка")
        msgBox.setText("Такого ID не существует!")
        msgBox.setIcon(QMessageBox.Information)
        msgBox.setStandardButtons(QMessageBox.Ok)
        retval = msgBox.exec_()
        print("Return value:", retval)
        self.conn.rollback()

    def ChangeErrorMessage(self):
        msgBox = QMessageBox()
        msgBox.setWindowTitle("Ошибка")
        msgBox.setText("Введены некорректные данные!")
        msgBox.setIcon(QMessageBox.Information)
        msgBox.setStandardButtons(QMessageBox.Ok)
        retval = msgBox.exec_()
        print("Return value:", retval)
        self.conn.rollback()

    def connectToDatabase(self):
        try:
            self.conn = psycopg2.connect(
                dbname='postgres',
                user='postgres',
                password='1234',
                host='localhost'
            )
            self.cursor = self.conn.cursor()
            print("Database connected")
        except Exception as e:
            print("ERROR:")
            print(str(e))
            self.conn.rollback()

    def fillBoxs(self):
        self.cursor.execute(
            "SELECT table_name FROM information_schema.tables WHERE table_schema='public' AND table_type='BASE TABLE';")
        rows = self.cursor.fetchall()
        for i, row in enumerate(rows):
            for j, val in enumerate(row):
                self.selectChooseBox.addItem(val)
                self.insertComboBox.addItem(val)
                self.alterComboBox.addItem(val)

    def pr1(self):
        try:
            s1 = ""
            row_count = self.tableWidget_3.rowCount()
            for row in range(row_count):
                item = self.tableWidget_3.item(row, 0)
                if item is not None:
                    if item.text().lower() == 'none' or item.text().lower() == 'null':
                        s1 += "null, "
                    else:
                        s1 += "'" + item.text() + "', "
                else:
                    return
            s1 = s1[:-2]
            row_count = self.tableWidget_3.rowCount()
            s2 = ""
            for row in range(row_count):
                item = self.tableWidget_3.verticalHeaderItem(row)
                s2 += item.text() + ", "
            s2 = s2[:-2]
            tableName = self.insertComboBox.currentText()
            idn = 1
            f = True
            while f:
                self.cursor.execute(f"SELECT EXISTS(SELECT 1 FROM public.{tableName} WHERE id={idn})")
                rows = self.cursor.fetchall()
                for i, row in enumerate(rows):
                    for j, val in enumerate(row):
                        if str(val).lower() == 'true':
                            idn += 1
                        else:
                            f = False
            self.cursor.execute(f"INSERT INTO public.{tableName}(id, {s2}) VALUES ({idn}, {s1})")
            self.conn.commit()
        except Exception as e:
            self.insertErrorMessage()
            print("ERROR:")
            print(str(e))

    def makeSelect(self):
        try:
            tableName = self.selectChooseBox.currentText()
            self.cursor.execute(f'SELECT * FROM public.{tableName} ORDER BY id ASC')
            rows = self.cursor.fetchall()
            column_names = [desc[0] for desc in self.cursor.description]
            self.tableWidget_2.setRowCount(len(rows))
            self.tableWidget_2.setColumnCount(len(column_names))
            self.tableWidget_2.setHorizontalHeaderLabels(column_names)
            for i, row in enumerate(rows):
                for j, val in enumerate(row):
                    self.tableWidget_2.setItem(i, j, QTableWidgetItem(str(val)))
        except Exception as e:
            print("ERROR:")
            print(str(e))
            self.conn.rollback()

    def showAddTable(self):
        try:
            tableName = self.insertComboBox.currentText()
            self.cursor.execute(f"SELECT column_name FROM information_schema.columns WHERE table_name = '{tableName}'")
            rows = self.cursor.fetchall()
            column_names = [row[0] for row in rows[1:]]
            self.tableWidget_3.setColumnCount(1)
            self.tableWidget_3.setRowCount(len(column_names))
            self.tableWidget_3.setVerticalHeaderLabels(column_names)
        except Exception as e:
            print("ERROR:")
            print(str(e))
            self.conn.rollback()

    def showChangeTable(self):
        try:
            tableName = self.alterComboBox.currentText()
            self.cursor.execute(f"SELECT column_name FROM information_schema.columns WHERE table_name = '{tableName}'")
            rows = self.cursor.fetchall()
            column_names = [row[0] for row in rows[1:]]
            self.tableWidget.setColumnCount(1)
            self.tableWidget.setRowCount(len(column_names))
            self.tableWidget.setVerticalHeaderLabels(column_names)
        except Exception as e:
            print("ERROR:")
            print(str(e))
            self.conn.rollback()

    def showChangeTableByID(self):
        try:
            tableName = self.alterComboBox.currentText()
            entityID = self.lineEdit.text()
            self.cursor.execute(f"SELECT * FROM public.{tableName} WHERE id = {entityID}")
            rows = self.cursor.fetchall()
            for i in range(len(rows[0]) - 1):
                self.tableWidget.setItem(i, 0, QTableWidgetItem(str(rows[0][i + 1])))
        except Exception as e:
            self.IDErrorMessage()
            print("ERROR:")
            print(str(e))

    def saveChanges(self):
        try:
            s1 = []
            row_count = self.tableWidget.rowCount()
            for row in range(row_count):
                item = self.tableWidget.item(row, 0)
                if item is not None:
                    s1.append(item.text())
                else:
                    return
            row_count = self.tableWidget.rowCount()
            s2 = []
            for row in range(row_count):
                item = self.tableWidget.verticalHeaderItem(row)
                s2.append(item.text())
            tableName = self.alterComboBox.currentText()
            entityID = self.lineEdit.text()
            s = ""
            for i in range(len(s1)):
                if s1[i].lower() == 'none' or s1[i].lower() == 'null':
                    s += s2[i] + ' = ' + 'null, '
                else:
                    s += s2[i] + " = '" + s1[i] + "', "
            s = s[:-2]
            self.cursor.execute(f"UPDATE public.{tableName} SET {s} WHERE id = {entityID}")
            self.conn.commit()
        except Exception as e:
            self.ChangeErrorMessage()
            print("ERROR:")
            print(str(e))

    def reptOne(self):
        try:
            date = self.dateEdit.date()
            productName = self.lineEdit_2.text()
            self.cursor.execute(f"""SELECT 
            COALESCE(legal_entity.id, individual.id) AS client_id,
        	CASE 
                WHEN public.order.legal_entity_id IS NOT NULL THEN 'юридическое лицо'
                WHEN public.order.individual_id IS NOT NULL THEN 'физическое лицо'
            END AS client_type,
            public.order.order_date,
            order_item.count,
            product.name
        FROM 
            public.order
        JOIN 
            order_item ON public.order.id = order_item.order_id
        JOIN 
            product ON order_item.product_id = product.id
        LEFT JOIN 
            legal_entity ON public.order.legal_entity_id = legal_entity.id
        LEFT JOIN 
            individual ON public.order.individual_id = individual.id
        WHERE 
            public.order.order_date = '{date.year()}-{date.month()}-{date.day()}' AND
            product.name = '{productName}';""")
            rows = self.cursor.fetchall()
            column_names = [desc[0] for desc in self.cursor.description]
            self.tableWidget_4.setRowCount(len(rows))
            self.tableWidget_4.setColumnCount(len(column_names))
            self.tableWidget_4.setHorizontalHeaderLabels(column_names)
            for i, row in enumerate(rows):
                for j, val in enumerate(row):
                    self.tableWidget_4.setItem(i, j, QTableWidgetItem(str(val)))
        except Exception as e:
            self.ChangeErrorMessage()
            print("ERROR:")
            print(str(e))

    def reptTwo(self):
        try:
            date = self.dateEdit_2.date()
            category = self.lineEdit_3.text()
            self.cursor.execute(f"""SELECT 
        product.name,
        product.price,
        product.category
    FROM 
        public.order
    JOIN 
        order_item ON public.order.id = order_item.order_id
    JOIN 
        product ON order_item.product_id = product.id
    WHERE 
        public.order.order_date = '{date.year()}-{date.month()}-{date.day()}' AND
        product.category = '{category}';""")
            rows = self.cursor.fetchall()
            column_names = [desc[0] for desc in self.cursor.description]
            self.tableWidget_5.setRowCount(len(rows))
            self.tableWidget_5.setColumnCount(len(column_names))
            self.tableWidget_5.setHorizontalHeaderLabels(column_names)
            for i, row in enumerate(rows):
                for j, val in enumerate(row):
                    self.tableWidget_5.setItem(i, j, QTableWidgetItem(str(val)))
        except Exception as e:
            self.ChangeErrorMessage()
            print("ERROR:")
            print(str(e))

    def reptThree(self):
            try:
                productName = self.lineEdit_4.text()
                self.cursor.execute(f"""SELECT 
    product.name,
    product.price,
    public.order.order_date
FROM 
    public.order
JOIN 
    order_item ON public.order.id = order_item.order_id
JOIN 
    product ON order_item.product_id = product.id
WHERE 
    product.name = '{productName}'
ORDER BY 
    public.order.order_date;""")
                rows = self.cursor.fetchall()
                column_names = [desc[0] for desc in self.cursor.description]
                self.tableWidget_6.setRowCount(len(rows))
                self.tableWidget_6.setColumnCount(len(column_names))
                self.tableWidget_6.setHorizontalHeaderLabels(column_names)
                for i, row in enumerate(rows):
                    for j, val in enumerate(row):
                        self.tableWidget_6.setItem(i, j, QTableWidgetItem(str(val)))
            except Exception as e:
                self.ChangeErrorMessage()
                print("ERROR:")
                print(str(e))

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label1.setText(_translate("MainWindow", "Выбор таблицы:"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_1), _translate("MainWindow", "Просмотр"))
        self.label2.setText(_translate("MainWindow", "Выбор таблицы:"))
        self.commitInsert.setText(_translate("MainWindow", "Добавить запись"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Добавление"))
        self.label3.setText(_translate("MainWindow", "Выбор таблицы:"))
        self.label4.setText(_translate("MainWindow", "Выбор ID:"))
        self.commitAlter_2.setText(_translate("MainWindow", "Вывести значения"))
        self.commitAlter.setText(_translate("MainWindow", "Сохранить изменения"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_9), _translate("MainWindow", "Изменение"))
        self.label_3.setText(_translate("MainWindow", "Выберите дату:"))
        self.label_7.setText(_translate("MainWindow", "Введите товар:"))
        self.pushButton_5.setText(_translate("MainWindow", "Вывод"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab), _translate("MainWindow", "Отчет 1"))
        self.label_4.setText(_translate("MainWindow", "Выберите дату:"))
        self.label_5.setText(_translate("MainWindow", "Введите категорию:"))
        self.pushButton_4.setText(_translate("MainWindow", "Вывод"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_4), _translate("MainWindow", "Отчет 2"))
        self.label_13.setText(_translate("MainWindow", "Введите товар:"))
        self.pushButton_8.setText(_translate("MainWindow", "Вывод по декадам"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_5), _translate("MainWindow", "Отчет 3"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Отчет"))


if __name__ == "__main__":
    os.environ["QT_AUTO_SCREEN_SCALE_FACTOR"] = "1"
    app = QtWidgets.QApplication(sys.argv)
    app.setAttribute(QtCore.Qt.ApplicationAttribute.AA_EnableHighDpiScaling)
    login_ui = Ui_Dialog()
    Login = QtWidgets.QDialog()
    login_ui.setupUi(Login)
    Login.show()
    if Login.exec_():
        pass
    else:
        if ID > 0:
            MainWindow = QtWidgets.QMainWindow()
            ui = Ui_MainWindow()
            ui.setupUi(MainWindow)
            MainWindow.show()
        else:
            exit()
    sys.exit(app.exec_())
